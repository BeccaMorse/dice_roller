{"version":3,"sources":["die.js","index.js"],"names":["module","exports","id","numSides","isNaN","Error","Math","ceil","random","Die","require","createDie","dice","die","length","push","document","getElementById","insertAdjacentHTML","rollAllDice","sumOfDice","dieIndex","rolled","roll","innerHTML","addEventListener","value","e","window","alert","diceBucket","removeChild","lastElementChild","pop"],"mappings":";AAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAAA,OAAOC,QAAP,WACgBC,SAAAA,EAAAA,EAAIC,GACRC,GADkB,EAAA,KAAA,GAClBA,MAAMD,GACA,MAAA,IAAIE,MAAM,iCACb,GAAIF,GAAY,EACb,MAAA,IAAIE,MAAM,6DACb,GAAIF,EAAW,GAAK,EACjB,MAAA,IAAIE,MAAM,+CACb,GAAIF,EAAW,IACZ,MAAA,IAAIE,MAAM,yBAEfH,KAAAA,GAAKA,EACLC,KAAAA,SAAWA,EAZxB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OAcW,MAAA,WACIG,OAAAA,KAAKC,KAAKD,KAAKE,SAAW,KAAKL,cAf9C,EAAA;;ACAA,IAAIM,EAAMC,QAAQ,YAEZC,EAAY,SAACC,EAAMT,GACjBU,IAAAA,EAAM,IAAIJ,EAAI,OAASG,EAAKE,OAAQX,GACxCS,EAAKG,KAAKF,GACVG,SAASC,eAAe,cAAcC,mBAAmB,YACrD,MAAQf,EAAW,yBACHU,EAAIX,GAAK,iBAI3BiB,EAAc,SAACP,GACbQ,IAAAA,EAAY,EACXC,IAAAA,YAAYT,EAAM,CACfC,IAAAA,EAAMD,EAAKS,UACXC,EAAST,EAAIU,OACjBP,SAASC,eAAeJ,EAAIX,IAAIsB,UAAYF,EAC5CF,GAAaE,EAEVF,OAAAA,GAGXJ,SAASS,iBAAiB,mBAAoB,WACtCb,IAAAA,EAAO,GACXI,SAASC,eAAe,eAAeQ,iBAAiB,QAAS,WACzDL,IAAAA,EAAYD,EAAYP,GAC5BI,SAASC,eAAe,OAAOO,UAAYJ,IAE/CJ,SAASC,eAAe,aAAaQ,iBAAiB,QAAS,WACvDtB,IAAAA,EAAWa,SAASC,eAAe,YAAYS,MAC/C,IACAf,EAAUC,EAAMT,GAClB,MAAOwB,GACLC,OAAOC,MAAMF,MAGrBX,SAASC,eAAe,aAAaQ,iBAAiB,QAAS,WACxDK,IAAAA,EAAad,SAASC,eAAe,cACzCa,EAAWC,YAAYD,EAAWE,kBAClCpB,EAAKqB","file":"dice_roller.a5347f19.js","sourceRoot":"..","sourcesContent":["module.exports = class Die {\n    constructor(id, numSides) {\n        if (isNaN(numSides)) {\n            throw new Error(\"No Dice! That's not a number.\")\n        } else if (numSides <= 0) {\n            throw new Error(\"Stay Positive! Number of sides must be greater than zero.\")\n        } else if (numSides % 1 != 0) {\n            throw new Error(\"Stay Wholesome! Whole numbers only, please.\")\n        } else if (numSides > 100) {\n            throw new Error(\"100 or under, please!\")\n        }\n        this.id = id\n        this.numSides = numSides\n    }\n    roll() {\n        return Math.ceil(Math.random() * this.numSides);\n    }\n}","var Die = require('./die.js');\n\nconst createDie = (dice, numSides) => {\n    var die = new Die(\"die-\" + dice.length, numSides)\n    dice.push(die)\n    document.getElementById(\"diceBucket\").insertAdjacentHTML(\"beforeend\",\n        \"<p>\" + numSides + \"-Sided Die: \" +\n        \"<span id=\\\"\" + die.id + \"\\\"><span>\" +\n    \"</p>\")\n}\n\nconst rollAllDice = (dice) => {\n    var sumOfDice = 0;\n    for (dieIndex in dice) {\n        var die = dice[dieIndex]\n        var rolled = die.roll()\n        document.getElementById(die.id).innerHTML = rolled\n        sumOfDice += rolled;\n    }\n    return sumOfDice\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    var dice = [];\n    document.getElementById(\"rollAllDice\").addEventListener(\"click\", () => {\n        var sumOfDice = rollAllDice(dice)\n        document.getElementById(\"sum\").innerHTML = sumOfDice;\n    })\n    document.getElementById(\"addNewDie\").addEventListener(\"click\", () => {\n        var numSides = document.getElementById(\"numSides\").value\n        try {\n            createDie(dice, numSides)\n        } catch (e) {\n            window.alert(e)\n        }\n    })\n    document.getElementById(\"removeDie\").addEventListener(\"click\", () => {\n       var diceBucket = document.getElementById(\"diceBucket\")\n       diceBucket.removeChild(diceBucket.lastElementChild)\n       dice.pop()\n    })\n});"]}